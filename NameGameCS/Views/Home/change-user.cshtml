@model NameGameCS.Models.ChangeUserViewModel

<body id="app" class="lobby2 flex-v rainbow-gradient-bg animate-rainbow">
</body>
<script type="text/babel">
    function App() {
        const [state, setState] = React.useState({
            users: @Html.Raw(Json.Serialize(Model.Users)),
            selectedUserID: null
        });

        function changeUser() {
            if (state.selectedUserID) {
                const user = state.users.find((user) => `${user.user_id}` === state.selectedUserID);
                if (user) {
                    document.cookie = `user_id=${state.selectedUserID}`;
                    document.cookie = `username=${user.username}`;
                    window.location.href = "/";
                }
            }
        }

        function onChange(event) {
            setState((prevState) => ({
                ...prevState,
                selectedUserID: event.target.value
            }));
        }

        function home() {
            window.location.href = "/";
        }

        return (
            <React.Fragment>
                <h1 className="heading subheading3">Change User</h1>
                <div className="flex-v center vmar">
                    <h4 className="heading subheading4 pad-05em">
                        {`Current User: ${"@Model.User.user_id"} - ${"@Model.User.username"}`}
                    </h4>
                </div>
                <div className="flex-h center vmar">
                    <select className="change-user-select" onChange={onChange} value={state.selectedUserID}>
                        {state.users.map((user) => (
                            <option key={user.user_id} value={user.user_id}>{`${user.user_id} - ${user.username}`}</option>
                        ))}
                    </select>
                    <button className="button2 change-user-button" onClick={changeUser}>Change User</button>
                </div>
                <button className="button2 self-centered" onClick={home}>Home</button>
            </React.Fragment>
        );
    }
    ReactDOM.render(<App />, document.querySelector("#app"));
</script>
